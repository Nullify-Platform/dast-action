name: 'Nullify DAST Action'
description: 'Test your API endpoints with Nullify DAST'
branding:
  icon: 'activity'
  color: 'purple'
inputs:
  app-name:
    description: Name of the application to be tested
    required: true
  spec-path:
    description: Absolute directory of the API specification to be tested
    required: true
  target-host:
    description: Target host endpoint of the application to be tested
    required: true
  base-args:
    description: Space-separated arguments to include (e.g. -d, -v for debug and verbose modes)
    required: false
    default: "-v"
  github-repository:
    description: Name of the GitHub repository
    required: false
    default: ${{ github.repository }}
  github-token:
    description: GitHub API token which will be exchanged for a Nullify token
    required: false
    default: ${{ github.token }}
  header:
    description: Header to include in authorization request
    required: false
  auth-method:
    description: Authentication method to use (basic, bearer, session, oauth2, jwt, custom)
    required: false
    default: "bearer"
  auth-username:
    description: Username for Basic Auth authentication
    required: false
  auth-password:
    description: Password for Basic Auth authentication
    required: false
  auth-token:
    description: Token for Bearer Token, JWT, or OAuth2 authentication
    required: false
  auth-client-id:
    description: Client ID for OAuth2 authentication
    required: false
  auth-client-secret:
    description: Client Secret for OAuth2 authentication
    required: false
  auth-token-url:
    description: Token URL for OAuth2 authentication
    required: false
  auth-scope:
    description: Scope for OAuth2 authentication
    required: false
  auth-login-url:
    description: URL to perform login for session-based authentication
    required: false
  auth-login-body:
    description: JSON body to send for session-based authentication login
    required: false
  auth-login-selector:
    description: CSS selector to extract session token/cookie from login response
    required: false
  auth-custom-headers:
    description: JSON string of custom headers for authentication
    required: false
  auth-custom-params:
    description: JSON string of custom query parameters for authentication
    required: false
  nullify-host:
    description: Nullify API host e.g. api.nullify.ai
    required: false
    default: "api.nullify.ai"
  nullify-version:
    description: Nullify CLI version to be used
    required: false
    default: "0.10.26"
  os-arch:
    description: Nullify CLI 'OS Arch' to be used with default `linux_amd64`
    required: false
    default: "linux_amd64"
  local:
    description: Nullify dynamic analysis scan run locally
    required: false
    default: 'false'
  image-label:
    description: Label to identify the Docker image to use for the scan
    required: false
runs:
  using: "composite"
  steps:
    - name: Install Nullify CLI
      shell: sh
      run: |
        download_url="https://github.com/Nullify-Platform/cli/releases/download/v${{ inputs.nullify-version }}/nullify_${{ inputs.os-arch }}_${{ inputs.nullify-version }}"
        wget -q $download_url -O ./nullify
        sudo chmod +x ./nullify
    - name: Setup Authentication
      shell: sh
      run: |
        mkdir -p ~/.nullify
        
        # Setup authentication configuration based on method
        cat > ~/.nullify/auth_config.json << EOF
        {
          "method": "${{ inputs.auth-method }}"
        EOF
        
        if [ "${{ inputs.auth-method }}" = "basic" ]; then
          echo ', "username": "${{ inputs.auth-username }}", "password": "${{ inputs.auth-password }}"' >> ~/.nullify/auth_config.json
        elif [ "${{ inputs.auth-method }}" = "bearer" ]; then
          echo ', "token": "${{ inputs.auth-token }}"' >> ~/.nullify/auth_config.json
        elif [ "${{ inputs.auth-method }}" = "jwt" ]; then
          echo ', "token": "${{ inputs.auth-token }}"' >> ~/.nullify/auth_config.json
        elif [ "${{ inputs.auth-method }}" = "oauth2" ]; then
          echo ', "clientId": "${{ inputs.auth-client-id }}", "clientSecret": "${{ inputs.auth-client-secret }}", "tokenUrl": "${{ inputs.auth-token-url }}", "scope": "${{ inputs.auth-scope }}"' >> ~/.nullify/auth_config.json
        elif [ "${{ inputs.auth-method }}" = "session" ]; then
          echo ', "loginUrl": "${{ inputs.auth-login-url }}", "loginBody": ${{ inputs.auth-login-body }}, "loginSelector": "${{ inputs.auth-login-selector }}"' >> ~/.nullify/auth_config.json
        elif [ "${{ inputs.auth-method }}" = "custom" ]; then
          echo ', "customHeaders": ${{ inputs.auth-custom-headers }}, "customParams": ${{ inputs.auth-custom-params }}' >> ~/.nullify/auth_config.json
        fi
        
        echo '}' >> ~/.nullify/auth_config.json
        
        # If header is specified, it takes precedence over auth config
        if [ ! -z "${{ inputs.header }}" ]; then
          echo "Header specified, will use that instead of auth config"
        fi
    - name: Execute Nullify DAST
      if: ${{ inputs.local == 'true' }}
      shell: sh
      run: |
        repo_fullname=${{ inputs.github-repository }}
        repo_owner=${repo_fullname%%/*}
        repo_name=${repo_fullname#*/}
        export GITHUB_ACTIONS=true
        export GITHUB_ACTION_REPOSITORY=${{ github.repository }}
        
        # Determine auth arguments
        AUTH_ARGS=""
        if [ ! -z "${{ inputs.header }}" ]; then
          AUTH_ARGS="--header \"${{ inputs.header }}\""
        elif [ "${{ inputs.auth-method }}" != "" ]; then
          AUTH_ARGS="--auth-config ~/.nullify/auth_config.json"
        fi
        
        ./nullify ${{ inputs.base-args }} \
          --host "${{ inputs.nullify-host }}" \
          --github-token "${{ inputs.github-token }}" \
          dast \
            --local \
            --app-name "${{ inputs.app-name }}" \
            --spec-path "${{ inputs.spec-path }}" \
            --target-host "${{ inputs.target-host }}" \
            --github-owner "$repo_owner" \
            --github-repo "$repo_name" \
            $AUTH_ARGS \
            ${{ inputs.image-label != '' && format('--image-label "{0}"', inputs.image-label) || '' }}
    - name: Execute Nullify DAST
      if: ${{ inputs.local != 'true' }}
      shell: sh
      run: |
        repo_fullname=${{ inputs.github-repository }}
        repo_owner=${repo_fullname%%/*}
        repo_name=${repo_fullname#*/}
        export GITHUB_ACTIONS=true
        export GITHUB_ACTION_REPOSITORY=${{ github.repository }}
        
        # Determine auth arguments
        AUTH_ARGS=""
        if [ ! -z "${{ inputs.header }}" ]; then
          AUTH_ARGS="--header \"${{ inputs.header }}\""
        elif [ "${{ inputs.auth-method }}" != "" ]; then
          AUTH_ARGS="--auth-config ~/.nullify/auth_config.json"
        fi
        
        ./nullify ${{ inputs.base-args }} \
          --host "${{ inputs.nullify-host }}" \
          --github-token "${{ inputs.github-token }}" \
          dast \
            --app-name "${{ inputs.app-name }}" \
            --spec-path "${{ inputs.spec-path }}" \
            --target-host "${{ inputs.target-host }}" \
            --github-owner "$repo_owner" \
            --github-repo "$repo_name" \
            $AUTH_ARGS \
            ${{ inputs.image-label != '' && format('--image-label "{0}"', inputs.image-label) || '' }}
